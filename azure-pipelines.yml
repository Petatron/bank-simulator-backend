trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  goVersion: '1.20.1' # Go version
  postgresPassword: 'password'

steps:
  - task: GoTool@0
    inputs:
      version: $(goVersion)

  - task: DockerInstaller@0
    inputs:
      dockerVersion: '19.03.5'

  - script: |
      echo "Check Go version"
      go version
    displayName: 'Go version'

  - script: |
      echo "Fetch Dependencies"
      go mod download
    displayName: 'Fetch dependencies'

  - script: |
      echo "Start PostgreSQL"
      docker pull postgres:latest
      echo "Create initdb script"
      echo "CREATE USER root WITH PASSWORD 'password'; CREATE DATABASE bank_simulator OWNER root;" > init.sql
      docker run --name postgres15 -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=password -v $PWD/init.sql:/docker-entrypoint-initdb.d/init.sql -d postgres:latest
    displayName: 'Start PostgreSQL and Database'

  - script: |
      echo "Install golang-migrate"
      curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
      sudo mv migrate /usr/local/bin/migrate
    displayName: 'Install golang-migrate'


  - script: |
      echo "Run Migrations"
      migrate -path db/migration -database "postgresql://root:password@localhost:5432/bank_simulator?sslmode=disable" -verbose up
    displayName: 'Run migrations'

  - script: |
      echo "Build"
      go build -v ./...
    displayName: 'Build'

  - task: CopyFiles@2
    inputs:
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  - script: |
      echo "Run Tests"
      go test -v ./...
    displayName: 'Run tests'
